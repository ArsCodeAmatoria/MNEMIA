version: '3.8'

services:
  # ===================
  # MEMORY INFRASTRUCTURE
  # ===================
  
  # Vector memory service using Qdrant
  qdrant:
    image: qdrant/qdrant:v1.7.0
    container_name: mnemia-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_storage:/qdrant/storage
      - ./memory/qdrant-config.yaml:/qdrant/config/production.yaml
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    restart: unless-stopped
    networks:
      - mnemia-network

  # Graph memory service using Neo4j
  neo4j:
    image: neo4j:5.15-community
    container_name: mnemia-neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
      - ./memory/neo4j-init.cypher:/docker-entrypoint-initdb.d/init.cypher:ro
    environment:
      - NEO4J_AUTH=neo4j/mnemia123
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*,gds.*
      - NEO4J_dbms_memory_heap_initial__size=512M
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_memory_pagecache_size=512M
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "mnemia123", "CALL db.ping()"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - mnemia-network

  # Redis for short-term state and caching
  redis:
    image: redis:7.2-alpine
    container_name: mnemia-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./memory/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - mnemia-network

  # ===================
  # CORE SERVICES
  # ===================

  # Conscious Core (Haskell)
  conscious-core:
    build:
      context: ./conscious-core
      dockerfile: Dockerfile
    container_name: mnemia-conscious-core
    ports:
      - "8003:8003"
    environment:
      - PORT=8003
      - ENVIRONMENT=production
    restart: unless-stopped
    networks:
      - mnemia-network

  # API Gateway (Rust)
  api-gateway:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: mnemia-api-gateway
    ports:
      - "8000:8000"
    environment:
      - RUST_LOG=info
      - PORT=8000
      - CONSCIOUS_CORE_URL=http://conscious-core:8003
      - PERCEPTION_URL=http://perception:8001
      - MEMORY_URL=http://memory-manager:8002
      - SOPHIA_URL=http://sophia-llm:8003
    depends_on:
      - conscious-core
      - perception
      - memory-manager
      - sophia-llm
    restart: unless-stopped
    networks:
      - mnemia-network

  # Perception & AI Service (Python)
  perception:
    build:
      context: ./perception
      dockerfile: Dockerfile
    container_name: mnemia-perception
    ports:
      - "8001:8001"
    environment:
      - PORT=8001
      - QDRANT_URL=http://qdrant:6333
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=mnemia123
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
    depends_on:
      - qdrant
      - neo4j
      - redis
    restart: unless-stopped
    networks:
      - mnemia-network

  # Memory Management Service
  memory-manager:
    build:
      context: ./memory
      dockerfile: Dockerfile.memory-manager
    container_name: mnemia-memory-manager
    ports:
      - "8002:8002"
    environment:
      - PORT=8002
      - QDRANT_URL=http://qdrant:6333
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=mnemia123
      - REDIS_URL=redis://redis:6379
    depends_on:
      - qdrant
      - neo4j
      - redis
    restart: unless-stopped
    networks:
      - mnemia-network

  # Sophia LLM - Philosophical Wisdom AI
  sophia-llm:
    build:
      context: ./llm-sophia
      dockerfile: Dockerfile
    container_name: mnemia-sophia-llm
    ports:
      - "8004:8003"  # External 8004 -> Internal 8003
    environment:
      - SOPHIA_API_PORT=8003
      - MNEMIA_PERCEPTION_URL=http://perception:8001
      - MNEMIA_MEMORY_URL=http://memory-manager:8002
      - MNEMIA_API_URL=http://api-gateway:8000
      - SOPHIA_MODEL_PATH=/app/models/fine_tuned/sophia
      - LOG_LEVEL=INFO
      - HF_HOME=/app/cache/huggingface
      - TRANSFORMERS_CACHE=/app/cache/huggingface
    volumes:
      - sophia_models:/app/models
      - sophia_cache:/app/cache
      - sophia_data:/app/data
    depends_on:
      - perception
      - memory-manager
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - mnemia-network

  # ===================
  # FRONTEND
  # ===================

  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mnemia-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000
    depends_on:
      - api-gateway
    restart: unless-stopped
    networks:
      - mnemia-network

volumes:
  qdrant_storage:
    driver: local
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local
  redis_data:
    driver: local
  sophia_models:
    driver: local
  sophia_cache:
    driver: local
  sophia_data:
    driver: local

networks:
  mnemia-network:
    driver: bridge
    name: mnemia-network 